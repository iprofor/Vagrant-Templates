# This LAMP setup is based on two 512MB Ubuntu Xenial machines: apache and mysql 

# This snippet helps joining the existing vbox private network (vboxnet1, in our case, because "vboxnet1" is indicated bellow on the network card setup) if it is the case. Overwise it is going to create a new vboxnetN private network. The snippet should be inserted at the top of the Vagrantfile
class VagrantPlugins::ProviderVirtualBox::Action::Network
    def dhcp_server_matches_config?(dhcp_server, config)
      true
    end
  end
  
  
Vagrant.configure("2") do |config|
  
    # General configuration

    config.vm.box = "ubuntu/xenial64"
    config.vm.box_check_update = false

    # Define allowed port range assignable by Vagrant when port collision is detected and the "auto_correct: true" is indicated on the specific record
    config.vm.usable_port_range = 2201..8999

    # this configuration is indicated as a second network interface
    config.vm.network "private_network", :type => 'dhcp', :name => 'vboxnet2', :adapter => 3

    # Disable inserting autogenerated vagrant ssh public key
    config.ssh.insert_key = false
    # Indicate Vagrant to use a particular private key, then if there is no key to use the Vagrant's default insecure private key. This procedure also helps Vagrant to log in in the first place, in order to insert that particular key.
    config.ssh.private_key_path = ["~/.ssh/server", "~/.vagrant.d/insecure_private_key"]
    # Copy that particular key from host into the "authorized_keys" file on guest machine, in the default vagrant user folder
    config.vm.provision "file", source: "~/.ssh/server.pub", destination: "~/.ssh/authorized_keys"


    # First machine

    config.vm.define "apache" do |apache|
        apache.vm.hostname = 'apache'
        # apache.vm.box_url = "ubuntu/xenial64"
    
        apache.vm.synced_folder "~/Projects/ghub/dirigio/dev.dirigio.it/", "/var/www/html", owner: "vagrant", group: "vagrant", automount: true, create: true

        apache.vm.network "private_network", ip: "10.205.205.15"
        apache.vm.network "forwarded_port", guest: 22, host: 2215, auto_correct: true, id: "ssh"
        apache.vm.network "forwarded_port", guest: 80, host: 8015, auto_correct: true

        apache.vm.provider :virtualbox do |v|
        v.cpus = 1
        # v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        v.customize ["modifyvm", :id, "--memory", 512]
        v.customize ["modifyvm", :id, "--name", "apache"]
        v.customize ["modifyvm", :id, "--groups", "/Vagrant"]
        v.customize ["modifyvm", :id, "--vram", "9"]
        v.customize ["modifyvm", :id, "--description", "This is an Ubuntu 16.04 machine"]
        v.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
        # Enable USB 3.0
        v.customize ["modifyvm", :id, "--usbxhci", "on"]
        # Disable Audio
        v.customize ["modifyvm", :id, "--audio", "none"]
        # Disable floppy boot option
        v.customize ["modifyvm", :id, "--boot1", "none"]
        end

        # config.vm.provision "shell", path: "provision.sh"
        apache.vm.provision "shell", inline: <<-SHELL
        export DEBIAN_FRONTEND=noninteractive
        apt-get -y update &&\
        apt-get -y upgrade &&\
        apt-get -y dist-upgrade &&\
        # General CLI installation
        apt-get -yf install whois mc curl htop glances &&\
        # Specific to this machine software installation
        apt-get -yf install apache2
        # Do not reboot from inside the machine because after the reboot the shared folders are not mounted. To mount them afterwards one's should "vagrant halt" and "vagrant up" from the host machine.
        # reboot
        SHELL
    end


    # Second machine
    
    config.vm.define "mysql" do |mysql|
        mysql.vm.hostname = 'mysql'
        # mysql.vm.box_url = "ubuntu/xenial64"
    
        mysql.vm.synced_folder "~/Drives/Vagrant", "/vagrant_data", owner: "vagrant", group: "vagrant", automount: true, create: true

        mysql.vm.network "private_network", ip: "10.205.205.16"
        mysql.vm.network "forwarded_port", guest: 22, host: 2216, auto_correct: true, id: "ssh"
        mysql.vm.network "forwarded_port", guest: 3306, host: 3316, auto_correct: true

        mysql.vm.provider :virtualbox do |v|
        v.cpus = 1
        # v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        v.customize ["modifyvm", :id, "--memory", 512]
        v.customize ["modifyvm", :id, "--name", "mysql"]
        v.customize ["modifyvm", :id, "--groups", "/Vagrant"]
        v.customize ["modifyvm", :id, "--vram", "9"]
        v.customize ["modifyvm", :id, "--description", "This is an Ubuntu 16.04 machine"]
        v.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
        # Enable USB 3.0
        v.customize ["modifyvm", :id, "--usbxhci", "on"]
        # Disable Audio
        v.customize ["modifyvm", :id, "--audio", "none"]
        # Disable floppy boot option
        v.customize ["modifyvm", :id, "--boot1", "none"]
        end

        # config.vm.provision "shell", path: "provision.sh"
        mysql.vm.provision "shell", inline: <<-SHELL
        export DEBIAN_FRONTEND=noninteractive
        apt-get -y update &&\
        apt-get -y upgrade &&\
        apt-get -y dist-upgrade &&\
        # General CLI installation
        apt-get -yf install whois mc curl htop glances &&\
        # Specific to this machine software installation
        apt-get -yf install mysql-server
        # Do not reboot from inside the machine because after the reboot the shared folders are not mounted. To mount them afterwards one's should "vagrant halt" and "vagrant up" from the host machine.
        # reboot
        SHELL
    end

end