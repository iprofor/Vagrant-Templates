# This snippet helps joining the existing vbox private network (vboxnet1, in our case, because "vboxnet1" is indicated bellow on the network card setup) if it is the case. Overwise it is going to create a new vboxnetN private network. The snippet should be inserted at the top of the Vagrantfile
class VagrantPlugins::ProviderVirtualBox::Action::Network
  def dhcp_server_matches_config?(dhcp_server, config)
    true
  end
end

Vagrant.configure('2') do |config|
  config.vm.box = "generic/centos8"
  config.vm.hostname = "centos8"
  config.vm.box_check_update = false
  
  # Define allowed port range assignable by Vagrant when port collision is detected and the "auto_correct: true" is indicated on the specific record
  config.vm.usable_port_range = 2201..8999
  
  # The "id: "ssh"" parameter overrides the default ssh port on the host machine
  config.vm.network "forwarded_port", guest: 22, host: 2205, auto_correct: true, id: "ssh"

  config.vm.synced_folder "~/Drives/Vagrant", "/vagrant_data", owner: "vagrant", group: "vagrant", automount: true
  config.vm.network "forwarded_port", guest: 80, host: 8005, auto_correct: true
  # config.vm.network "private_network", type: "dhcp"

  # this configuration is indicated as a second network interface
  config.vm.network "private_network", :type => 'dhcp', :name => 'vboxnet2', :adapter => 3
  
  config.vm.network "private_network", ip: "10.205.205.5"

  # config.vm.network "public_network", bridge: 'wlp1s0'

  # this one instead is indicated as a third network interfacemay be used as a third interface
  # config.vm.network "public_network", :bridge => 'wlp1s0', :adapter => 3

  # config.  = "30 GB"
  
  # Disable inserting autogenerated vagrant ssh public key
  config.ssh.insert_key = false
  
  # Indicate Vagrant to use a particular private key, then if there is no key to use the Vagrant's default insecure private key. This procedure also helps Vagrant to log in in the first place, in order to insert that particular key.
  config.ssh.private_key_path = ["~/.ssh/server", "~/.vagrant.d/insecure_private_key"]
  
  # Copy that particular key from host into the "authorized_keys" file on guest machine, in the default vagrant user folder
  config.vm.provision "file", source: "~/.ssh/server.pub", destination: "~/.ssh/authorized_keys"

  config.vm.provider :virtualbox do |vbox|
    vbox.memory = 512
    vbox.name = "centos8"
    vbox.cpus = 1
    # vbox.gui = true
    vbox.customize ["modifyvm", :id, "--groups", "/Vagrant"]
    vbox.customize ["modifyvm", :id, "--vram", "9"]
    vbox.customize ["modifyvm", :id, "--description", "This is a CentOS 8 machine"]
    vbox.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
    
    # Enable USB 3.0
    vbox.customize ["modifyvm", :id, "--usbxhci", "on"]
    
    # Disable Audio
    vbox.customize ["modifyvm", :id, "--audio", "none"]
    
    # Disable floppy boot option
    vbox.customize ["modifyvm", :id, "--boot1", "none"]
  end

  # config.vm.provision "shell", path: "provision.sh"
  config.vm.provision "shell", inline: <<-SHELL
    yum -y update
    yum -y install whois mc curl htop
    # Do not reboot from inside the machine because after the reboot the shared folders are not mounted. To mount them afterwards one's should "vagrant halt" and "vagrant up" from the host machine.
    # reboot
  SHELL

end